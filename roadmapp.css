		.container {
			margin-top: 20px;
			max-width: 95vw;
		}

		.nav-link {
			color: var(--bs-info);
		}

		.nav-link:hover {
			color: var(--bs-light);
		}

		.column {
			min-height: 70vh;
			flex-grow: 1;
			background-color: var(--bs-dark-bg-subtle);
			padding: .4em;
			border-radius: 8px;
		}

		.story-text {
			color: var(--bs-secondary);
			display: inline;
		} 

		.story-response {
			margin-left: 0.4em;
			color: var(--bs-light);
			display: inline;
		} 

		body {
			font-family: 'DM Sans', sans-serif;
		}

		.badge {
			font-size: 0.8em;
		}

		.badge-footer {
			flex: 1 1 0;
			margin-top: 1em;
		}
		.badge-critical {
			background-color: var(--bs-success);
			color: white;
		}
		.badge-adds-value {
			background-color: var(--bs-danger);
			color: white;
		}
		.badge-impossible {
			background-color: var(--bs-danger);
			color: white;
		}
		.badge-possible {
			background-color: var(--bs-warning);
			color: var(--bs-dark);
		}
		.badge-simple {
			background-color: var(--bs-success);
			color: white;
		}
		.badge-rice {
			background-color: var(--bs-purple);
			color: white;
		}

		.badge-rice.massive {
			background-color: var(--bs-purple);
			color: white;
			font-size: 2.4em;
		}
		.card {
			margin-bottom: 10px;
			background: var(--bs-dark);
		}
		.card-text {
			font-weight: normal;
			font-size: 1rem; 
		}
		.btn-group-label {
			margin-bottom: 10px;
		}

		.btn.disabled {
			pointer-events: none; /* Makes it unclickable */
			opacity: 0.5; /* Makes it semi-transparent to indicate it's disabled */
		}


		:placeholder {
			color: #CED4DA;
			opacity: 1; /* Firefox */
		}

		.flex-container {
			flex:1;
			align-items: center; /* This will vertically align the items in case they have different heights. */
			margin-bottom: 1em; /* Optional: To give space between each row */
		}

		.impact-flex {
			display: flex;
			flex-direction: row;
			flex-grow: stretch;
			justify-content: flex-start;
			gap:16px;
			align-items: flex-start; /* This will vertically align the items in case they have different heights. */
			margin-bottom: 1em; /* Optional: To give space between each row */
			padding: 1em;
		}

		.impact-flex .story-text {
			margin-left: 0.4em;
		}

		.impact-flex .story-text:first-child {
			margin-left: 0;
		}

		.flex-container .form-group {
			flex: 1;
			width: auto;
			margin-right: 1em;
		}

		.flex-container .form-group:last-child {
			margin-right: 0;
		}

		.flex-container label {
			margin: 0;
			padding: 0;
			margin-right: 1em; /* Optional: To give some space between label and input */
			width: auto;
		}
		.flex-container input {
			flex: 1; /* This means the input will grow to take up all available space */
			margin-right: 1em;
		}


		.modal-body {
			padding: 16px;
		}
		.modal-footer {
			padding-left: 0;
			padding-right: 0;
			padding-bottom: 0;
		}

		.radio {
			display: flex;
			gap: 16px;
			justify-content: space-between;
			flex-direction: column;
		}

		.radio-small {
			display: flex;
			gap: 16px;
			justify-content: flex-start;
			flex-direction: row;
			margin-bottom: 1em;
		}

		.radio-wrapper {
			display: flex;
			align-items: center;
			padding: 16px;
			border: 1px solid var(--bg-light);
			border-radius: 8px;
			flex: 1 1 0;
			cursor: pointer;
			transition: background-color 0.3s;
		}

		.radio-wrapper.disabled {
			opacity: 0.6;
			pointer-events: none;
		}

		.radio-wrapper:hover {
			background-color: var(--bg-dark);
		}

		.radio-wrapper.disabled:hover {
			background-color: none;
		}

		.form-check-input {
			position: absolute;  /* Absolute position */
			top: 0;              /* Stretch over the whole container */
			left: 0;
			width: 100%;
			height: 100%;
			opacity: 0;          /* Keep it invisible */
			margin: 0;
			padding: 0;
			cursor: pointer;     /* Show a pointer cursor */
			z-index: 1;          /* Position it above other elements so it receives the click */
		}

		.radio-button::after {
			opacity: 0;
		}

		/* Hidden by default */
		.form-check-input:checked ~ .radio-button::after {
			opacity: 1; /* Show when the actual input radio is checked */
			background-color: var(--bs-info);
		}

		.radio-wrapper input[type="radio"]:checked {
		  border-color: var(--bs-info);
		}


		.form-check-input:focus ~ .form-check-label .radio-button {
			box-shadow: 0 0 3px 3px var(--bg-light); /* Add a focus ring for better accessibility */
		}


		.form-check.radio-wrapper {
			position: relative;  /* Set this so the absolute positioning of the child input is relative to this container */
			display: flex;
			flex-wrap: nowrap;
			gap:16px;
			align-items: center;
			flex: 1;
			border: 1px solid var(--bs-gray);
		}

		.form-check-label {
			display: flex;
			flex-wrap: wrap;
			gap:0px;
			justify-content: space-between;
			align-items: flex-start;
			flex-direction: column;
		}

		.radio-button {
			min-width: 16px;
			height: 16px;
			border-radius: 50%;
			border: 2px solid var(--bs-gray);
			position: relative;
		}

		.radio-button::after {
			content: "";
			width: 8px; /* Reduced for inner circle */
			height: 8px;
			background-color: var(--bs-gray);
			border-radius: 50%;
			position: absolute;
			top: 50%;
			left: 50%;
			transform: translate(-50%, -50%);
			opacity: 0;
		}

		.radio-wrapper.selected .radio-button::after {
			opacity: 1;
		}

		.title {
			font-weight: bold;
			margin-bottom: 5px;
		}

		.description {
			color: var(--bs-light);
			margin-top: 0.25em;
		}

		.user-story-content {
			font-size: 1.2rem;
			margin-bottom: 2em;
		}

		@media (max-width: 768px) {
			.flex-container {
				flex-direction: column;
				align-items: flex-start;
			}
			.flex-container label {
				width: auto;
				padding: 4px 0;
			}
			.flex-container input {
				width: 100%;
				flex: 1; /* This means the input will grow to take up all available space */
			}
			.radio-small {
				flex-direction: column;
			}
		}
		.hidden {
		    display: none;
		}
